/*
 * Copyright (C) 2024 Forefront Industries, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#define TRANSFORM_N true
#define TRANSFORM_T false
#define LAYOUT_C true
#define LAYOUT_F false
#define QUANTIZED true
#define NOT_QUANTIZED false

typedef bool MATRIX_QUANTIZE_STATUS;

typedef bool MATRIX_TRANSFORM;

struct KernelConfig
{
    const int tileM;
    const int tileN;
    const int tileK;
    const int patchM;
    const int patchN;
    const int k;
    const int m;
    const int splitK;
    const int warpCountM;
    const int warpCountN;
    const int mmaSizeM;
    const int mmaSizeN;
    const int mmaSizeK;
    const int warpMmaCountM;
    const int warpMmaCountN;
    const int warpMmaCountK;
    const int contiguousBytesA;
    const int contiguousBytesB;
    const int deqBlockSize;

    const int stages;
    const int absMaxPerBlock;
    const int threadsPerBlock;

    const int pipelineStrat;
    const int paddingC;

    static constexpr int codeSize = 16;
    static constexpr bool isSafe = false;
    static constexpr int alignSizeBytesA = 16;
    static constexpr int alignSizeBytesB = 16;

    static constexpr MATRIX_TRANSFORM transformA = TRANSFORM_N;
    static constexpr MATRIX_TRANSFORM transformB = TRANSFORM_T;
    static constexpr MATRIX_TRANSFORM transformC = TRANSFORM_T;

    static constexpr MATRIX_QUANTIZE_STATUS quantStatA = QUANTIZED;
    static constexpr MATRIX_QUANTIZE_STATUS quantStatB = NOT_QUANTIZED;

    static constexpr int deqBlockCount = 1;
};

constexpr KernelConfig attn_out_1 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 4096,
    /* m */ 4096,
    /* splitK */ 32,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 2,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 128,
    /* deqBlockSize */ 4096,
    /* stages */ 2,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 1,
    /* paddingC */ 2};

constexpr KernelConfig qkv_proj_1 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 4096,
    /* m */ 6144,
    /* splitK */ 6,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 128,
    /* deqBlockSize */ 4096,
    /* stages */ 6,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 1,
    /* paddingC */ 2};

constexpr KernelConfig mistral_mlp_in_1 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 4096,
    /* m */ 28672,
    /* splitK */ 12,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 4096,
    /* stages */ 4,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 1,
    /* paddingC */ 2};

constexpr KernelConfig mixtral_mlp_in_1 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 229376,
    /* splitK */ 1,
    /* warpCountM */ 4,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 4096,
    /* stages */ 2,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 1,
    /* paddingC */ 0};

constexpr KernelConfig mistral_mlp_out_1 = {
    /* tileM */ 512,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 2,
    /* patchN */ 2,
    /* k */ 14336,
    /* m */ 4096,
    /* splitK */ 10,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 14336,
    /* stages */ 8,
    /* absMaxPerBlock */ 512,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 2,
    /* paddingC */ 2};

constexpr KernelConfig mixtral_mlp_out_1 = {
    /* tileM */ 384,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 14336,
    /* m */ 32768,
    /* splitK */ 16,
    /* warpCountM */ 4,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 6,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 14336,
    /* stages */ 4,
    /* absMaxPerBlock */ 384,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 1,
    /* paddingC */ 2};

constexpr KernelConfig attn_out_16 = {
    /* tileM */ 512,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 2,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 4096,
    /* splitK */ 10,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 14336,
    /* stages */ 8,
    /* absMaxPerBlock */ 512,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 2,
    /* paddingC */ 2};

constexpr KernelConfig qkv_proj_16 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 4096,
    /* m */ 6144,
    /* splitK */ 6,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 128,
    /* deqBlockSize */ 4096,
    /* stages */ 6,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 1,
    /* paddingC */ 2};

constexpr KernelConfig mistral_mlp_in_16 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 4096,
    /* m */ 28672,
    /* splitK */ 2,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 2,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 32,
    /* deqBlockSize */ 4096,
    /* stages */ 6,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 2,
    /* paddingC */ 0};

constexpr KernelConfig mixtral_mlp_in_16 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 229376,
    /* splitK */ 1,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 4096,
    /* stages */ 4,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 1,
    /* paddingC */ 0};

constexpr KernelConfig mistral_mlp_out_16 = {
    /* tileM */ 512,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 2,
    /* patchN */ 2,
    /* k */ 14336,
    /* m */ 4096,
    /* splitK */ 10,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 14336,
    /* stages */ 8,
    /* absMaxPerBlock */ 512,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 2,
    /* paddingC */ 2};

constexpr KernelConfig mixtral_mlp_out_16 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 14336,
    /* m */ 32768,
    /* splitK */ 8,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 2,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 128,
    /* deqBlockSize */ 14336,
    /* stages */ 6,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 1,
    /* paddingC */ 2};

constexpr KernelConfig attn_out_32 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 4096,
    /* splitK */ 8,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 2,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 32,
    /* deqBlockSize */ 4096,
    /* stages */ 6,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 2,
    /* paddingC */ 0};

constexpr KernelConfig qkv_proj_32 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 6144,
    /* splitK */ 4,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 2,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 128,
    /* deqBlockSize */ 4096,
    /* stages */ 4,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 1,
    /* paddingC */ 2};

constexpr KernelConfig mistral_mlp_in_32 = {
    /* tileM */ 384,
    /* tileN */ 64,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 28672,
    /* splitK */ 1,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 6,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 4096,
    /* stages */ 8,
    /* absMaxPerBlock */ 384,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 4,
    /* paddingC */ 0};

constexpr KernelConfig mixtral_mlp_in_32 = {
    /* tileM */ 512,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 229376,
    /* splitK */ 1,
    /* warpCountM */ 4,
    /* warpCountN */ 2,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 8,
    /* warpMmaCountN */ 2,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 128,
    /* deqBlockSize */ 4096,
    /* stages */ 8,
    /* absMaxPerBlock */ 512,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 1,
    /* paddingC */ 0};

constexpr KernelConfig mistral_mlp_out_32 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 14336,
    /* m */ 4096,
    /* splitK */ 10,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 2,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 128,
    /* deqBlockSize */ 14336,
    /* stages */ 6,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 3,
    /* paddingC */ 2};

constexpr KernelConfig mixtral_mlp_out_32 = {
    /* tileM */ 512,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 14336,
    /* m */ 32768,
    /* splitK */ 2,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 14336,
    /* stages */ 6,
    /* absMaxPerBlock */ 512,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 2,
    /* paddingC */ 0};

constexpr KernelConfig attn_out_64 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 4096,
    /* m */ 4096,
    /* splitK */ 2,
    /* warpCountM */ 4,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 128,
    /* deqBlockSize */ 4096,
    /* stages */ 12,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 2,
    /* paddingC */ 2};

constexpr KernelConfig qkv_proj_64 = {
    /* tileM */ 384,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 6144,
    /* splitK */ 2,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 3,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 4096,
    /* stages */ 10,
    /* absMaxPerBlock */ 384,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 4,
    /* paddingC */ 0};

constexpr KernelConfig mistral_mlp_in_64 = {
    /* tileM */ 384,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 28672,
    /* splitK */ 6,
    /* warpCountM */ 4,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 6,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 4096,
    /* stages */ 4,
    /* absMaxPerBlock */ 384,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 2,
    /* paddingC */ 2};

constexpr KernelConfig mixtral_mlp_in_64 = {
    /* tileM */ 512,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 4096,
    /* m */ 229376,
    /* splitK */ 1,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 128,
    /* deqBlockSize */ 4096,
    /* stages */ 8,
    /* absMaxPerBlock */ 512,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 1,
    /* paddingC */ 2};

constexpr KernelConfig mistral_mlp_out_64 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 14336,
    /* m */ 4096,
    /* splitK */ 10,
    /* warpCountM */ 4,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 14336,
    /* stages */ 4,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 2,
    /* paddingC */ 0};

constexpr KernelConfig mixtral_mlp_out_64 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 14336,
    /* m */ 32768,
    /* splitK */ 8,
    /* warpCountM */ 4,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 128,
    /* deqBlockSize */ 14336,
    /* stages */ 4,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 1,
    /* paddingC */ 2};

constexpr KernelConfig attn_out_128 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 4096,
    /* splitK */ 2,
    /* warpCountM */ 4,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 4096,
    /* stages */ 6,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 2,
    /* paddingC */ 2};

constexpr KernelConfig qkv_proj_128 = {
    /* tileM */ 768,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 6144,
    /* splitK */ 2,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 6,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 32,
    /* deqBlockSize */ 4096,
    /* stages */ 6,
    /* absMaxPerBlock */ 768,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 3,
    /* paddingC */ 2};

constexpr KernelConfig mistral_mlp_in_128 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 28672,
    /* splitK */ 1,
    /* warpCountM */ 4,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 32,
    /* deqBlockSize */ 4096,
    /* stages */ 2,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 1,
    /* paddingC */ 2};

constexpr KernelConfig mixtral_mlp_in_128 = {
    /* tileM */ 512,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 2,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 229376,
    /* splitK */ 1,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 8,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 4096,
    /* stages */ 8,
    /* absMaxPerBlock */ 512,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 1,
    /* paddingC */ 0};

constexpr KernelConfig mistral_mlp_out_128 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 14336,
    /* m */ 4096,
    /* splitK */ 2,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 2,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 14336,
    /* stages */ 4,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 2,
    /* paddingC */ 0};

constexpr KernelConfig mixtral_mlp_out_128 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 14336,
    /* m */ 32768,
    /* splitK */ 4,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 2,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 14336,
    /* stages */ 6,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 2,
    /* paddingC */ 0};

constexpr KernelConfig attn_out_256 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 4096,
    /* splitK */ 2,
    /* warpCountM */ 4,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 32,
    /* deqBlockSize */ 4096,
    /* stages */ 4,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 1,
    /* paddingC */ 2};

constexpr KernelConfig qkv_proj_256 = {
    /* tileM */ 384,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 6144,
    /* splitK */ 2,
    /* warpCountM */ 4,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 6,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 4096,
    /* stages */ 4,
    /* absMaxPerBlock */ 384,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 2,
    /* paddingC */ 2};

constexpr KernelConfig mistral_mlp_in_256 = {
    /* tileM */ 256,
    /* tileN */ 64,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 4096,
    /* m */ 28672,
    /* splitK */ 1,
    /* warpCountM */ 4,
    /* warpCountN */ 2,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 128,
    /* deqBlockSize */ 4096,
    /* stages */ 4,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 4,
    /* paddingC */ 2};

constexpr KernelConfig mixtral_mlp_in_256 = {
    /* tileM */ 256,
    /* tileN */ 64,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 229376,
    /* splitK */ 1,
    /* warpCountM */ 4,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 8,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 4096,
    /* stages */ 4,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 1,
    /* paddingC */ 2};

constexpr KernelConfig mistral_mlp_out_256 = {
    /* tileM */ 256,
    /* tileN */ 64,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 14336,
    /* m */ 4096,
    /* splitK */ 2,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 2,
    /* warpMmaCountN */ 8,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 14336,
    /* stages */ 10,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 4,
    /* paddingC */ 2};

constexpr KernelConfig mixtral_mlp_out_256 = {
    /* tileM */ 256,
    /* tileN */ 128,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 14336,
    /* m */ 32768,
    /* splitK */ 2,
    /* warpCountM */ 4,
    /* warpCountN */ 2,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 8,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 128,
    /* deqBlockSize */ 14336,
    /* stages */ 4,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 2,
    /* paddingC */ 2};

constexpr KernelConfig attn_out_512 = {
    /* tileM */ 256,
    /* tileN */ 64,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 4096,
    /* m */ 4096,
    /* splitK */ 2,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 2,
    /* warpMmaCountN */ 8,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 4096,
    /* stages */ 10,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 2,
    /* paddingC */ 2};

constexpr KernelConfig qkv_proj_512 = {
    /* tileM */ 256,
    /* tileN */ 64,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 4096,
    /* m */ 6144,
    /* splitK */ 1,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 2,
    /* warpMmaCountN */ 8,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 32,
    /* deqBlockSize */ 4096,
    /* stages */ 4,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 1,
    /* paddingC */ 2};

constexpr KernelConfig mistral_mlp_in_512 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 2,
    /* k */ 4096,
    /* m */ 28672,
    /* splitK */ 1,
    /* warpCountM */ 4,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 4,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 64,
    /* deqBlockSize */ 4096,
    /* stages */ 4,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 128,
    /* pipelineStrat */ 2,
    /* paddingC */ 0};

constexpr KernelConfig mixtral_mlp_in_512 = {
    /* tileM */ 256,
    /* tileN */ 32,
    /* tileK */ 32,
    /* patchM */ 4,
    /* patchN */ 1,
    /* k */ 4096,
    /* m */ 229376,
    /* splitK */ 1,
    /* warpCountM */ 8,
    /* warpCountN */ 1,
    /* mmaSizeM */ 16,
    /* mmaSizeN */ 8,
    /* mmaSizeK */ 16,
    /* warpMmaCountM */ 2,
    /* warpMmaCountN */ 4,
    /* warpMmaCountK */ 2,
    /* contiguousBytesA */ -1,
    /* contiguousBytesB */ 32,
    /* deqBlockSize */ 4096,
    /* stages */ 4,
    /* absMaxPerBlock */ 256,
    /* threadsPerBlock */ 256,
    /* pipelineStrat */ 2,
    /* paddingC */ 2};
